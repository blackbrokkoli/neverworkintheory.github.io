Gracias a Greg y Mike por organizar esta increíble serie de charlas.
Muchas de las cosas que voy a tocar durante los próximos 10 minutos ya se han mencionado en algunas de las charlas anteriores y me gustaría tener más tiempo para tal vez crear más enlaces a las ideas anteriores que se compartieron, pero en los próximos nueve a diez minutos voy a discutir por qué la productividad de los desarrolladores es más complicada de lo que podemos pensar y por qué la medición de la productividad puede ser contraproducente, y también voy a tratar de convencerte de que debemos centrarnos y prestar más atención a la mejora y la comprensión de la experiencia de los desarrolladores, algo que ya hemos oído hoy varias veces, y por qué hacerlo puede mejorar el espacio de la productividad en general.

Pero primero hablemos de productividad.
Si quieres convertir una reunión aburrida con desarrolladores de software y sus gerentes en una emocionante, sólo tienes que sacar a colación el concepto de productividad de los desarrolladores y sugerir cómo debería medirse.
Y descubrirás que las personas presentes en la sala tienen puntos de vista muy diferentes sobre lo que significa la productividad para ellos y sobre cómo debería medirse la productividad, si es que se mide.
Y también podemos escuchar que, en esas reuniones, los líderes y gerentes de las empresas de software se preocupan por la productividad porque suponen que si tienen una mayor productividad de los desarrolladores, eso les ayudará a ofrecer valor a sus clientes más rápidamente.
Y los desarrolladores se preocupan por la productividad porque tener impacto y sentir que su trabajo aporta valor les hará más felices.
Pero, ¿qué significa realmente la productividad de los desarrolladores para los directivos y los desarrolladores?
Pues resulta que, junto con mis colegas Brian y Tom de Microsoft, hemos preguntado a directivos y desarrolladores cómo definen la productividad mediante una encuesta abierta.

Y escuchamos definiciones muy variadas.
De hecho, los directivos son más propensos a hablar de la productividad en términos de resultados de rendimiento, pero muchos de ellos también nos dieron definiciones ricas de productividad que no se limitaban a mantener a sus clientes contentos, sino que también incluían el bienestar de sus desarrolladores y la construcción de una cultura de trabajo positiva.
Los desarrolladores también nos dieron definiciones muy variadas, pero ellos -en comparación con sus directivos- eran más propensos a definir la productividad en términos de resultados de la actividad y del tiempo que pueden pasar haciendo su trabajo sin interrupciones y en un estado de flujo.
Sin embargo, muchos desarrolladores también compartieron que la productividad no se limitaba a la actividad y el flujo, sino que también se refería al impacto de su trabajo: ayudar a los demás y aprender para el futuro.


Así que definir la productividad es importante, pero los líderes -y yo diría que incluso algunos desarrolladores- quieren ser capaces de medir la productividad para poder entender el impacto que pueden tener los cambios en las herramientas, los procesos y los objetivos.
Y esto lo vimos, por supuesto, especialmente durante los dos últimos años de trabajo desde casa y el reciente impulso del trabajo híbrido.
Y, de hecho, los primeros intentos de comprender la productividad en términos de datos de telemetría, como el número de pull request, e incluso a través de encuestas a los desarrolladores, nos dieron la primera impresión de que la productividad había mejorado potencialmente o se había mantenido igual.
Pero, por supuesto, no era tan sencillo.
Así que, como descubrimos nosotros y otros cuando encuestamos a los desarrolladores en los primeros meses de la pandemia, muchos informaron de una mayor productividad percibida, pero a costa de un posible agotamiento, mientras que otros tenían dificultades para trabajar.

Y también aprendimos que el trabajo en equipo era más desafiante y que las interrupciones y, de hecho, la naturaleza de estas interrupciones habían aumentado.
Pero, ¿cómo dar sentido a toda esta investigación?
Así que éramos varios los que estudiábamos la productividad durante la pandemia y reconocimos que necesitábamos una forma mejor de enmarcar la productividad de los desarrolladores.
Así que, basándonos en años de investigación, no sólo en la que nosotros realizamos, desarrollamos el marco SPACE, que sintetiza las cinco dimensiones principales de la productividad que vimos surgir de los diversos estudios sobre la productividad de los desarrolladores.
Y SPACE nos ayuda a articular que la productividad de los desarrolladores no se reduce a la velocidad o al rendimiento y que hay muchos aspectos diferentes de la productividad que debemos considerar.

Permítanme hablar de estas cinco dimensiones con un poco más de detalle.
La primera dimensión, la satisfacción y el bienestar, examina el grado de satisfacción y felicidad de los desarrolladores.
Nuestra investigación anterior muestra que la satisfacción y la productividad percibida, aunque no son exactamente lo mismo, están correlacionadas, y es crucial observar cómo se sienten los desarrolladores para obtener una comprensión holística de su productividad.
Esto es algo que a menudo se mide a través de encuestas para obtener los datos subjetivos.
La siguiente dimensión del marco SPACE es el rendimiento.
Se refiere a los resultados de un sistema o proceso, y es el aspecto de la productividad que más preocupa a muchos líderes.

Y se podría pensar que evaluar el rendimiento es fácil, pero en realidad, aunque hay algunas medidas objetivas, hay muchas variables que debemos considerar.
Por ejemplo, una gran cantidad de código no significa necesariamente que sea de alta calidad, y un código de alta calidad no significa necesariamente que los clientes estén contentos, e incluso los clientes contentos no significan necesariamente más ingresos para una empresa.
La tercera dimensión que añadimos a SPACE es la actividad y los resultados.
Por supuesto, se trata de una métrica importante y es una de las primeras en las que piensan los desarrolladores, pero, como hemos dicho hasta ahora en esta charla, no es la clave de la productividad.

Y, de hecho, las actividades que realizan los desarrolladores también son complejas y diversas, y podemos medir algunas, por ejemplo, las solicitudes de extracción o el número de revisiones de código, pero otras actividades, como la asistencia a reuniones, están ayudando a otros desarrolladores que se están incorporando o aprendiendo para el futuro.
Estas cosas son difíciles de poner en números.
La siguiente dimensión de SPACE se refiere a la comunicación y la colaboración, algo de lo que también hemos oído hablar mucho hoy.
Esta dimensión subraya que el desarrollo de software es una actividad de equipo y un proceso inherentemente creativo y colaborativo.
Y la última dimensión que hemos añadido al marco SPACE se refiere a la eficacia y la fluidez.
La eficiencia y la fluidez es la capacidad de trabajar sin interrupciones.

Estos son temas que se han estudiado ampliamente en nuestra comunidad de investigación en los últimos años, y esta dimensión capta la importancia del flujo para los desarrolladores individuales y el impacto negativo que las interrupciones pueden tener en su trabajo.
Pero esta dimensión también capta lo bien que los equipos orquestan sus diferentes actividades y la frecuencia con la que progresan continuamente.
Así que SPACE nos ofrece una forma mucho más rica y matizada de pensar en la productividad, pero puede ayudarnos a medir la productividad, algo que preocupa especialmente a los directivos, como he mencionado.

Afortunadamente, hoy en día se reconoce que no existe una métrica universal para medir la productividad, y SPACE puede ayudarnos y desempeña un papel en este sentido al ayudarnos a elegir al menos varias métricas de diferentes dimensiones de la productividad, y de hecho nuestro documento describe esto con un poco más de detalle.
Pero no hemos terminado: la elección de estas métricas sigue siendo un reto y creo que tenemos que hacer mucho más para entender cómo medir los diferentes aspectos de la productividad o, de lo contrario, corremos el riesgo de ser contraproducentes.

Esto es especialmente importante para ser cauteloso porque, bueno, seamos sinceros, los ingenieros han sido entrenados y condicionados a considerar los datos objetivos y las métricas que son más fáciles de cuantificar antes de considerar los datos cualitativos y subjetivos, por lo que antes de elegir las métricas necesitamos primero hacer una pausa, dar un paso atrás y centrarnos en cuáles son los objetivos, es decir, ¿estamos tratando de medir la productividad en términos de mejora de la calidad del producto, o estamos tratando de mejorar la productividad de la calidad en términos de la velocidad de nuestro proceso de ingeniería y ser capaz de entregar continuamente el código, o estamos mirando la experiencia del desarrollador o tal vez es los tres.
Ahora bien, para la calidad del producto y la calidad del proceso ya tenemos algunas métricas cuantitativas objetivas y validadas bien definidas para ellos, pero como he mencionado antes, incluso estos - la medición de estos no es simple, y tienen que ser - tenemos que considerar cuidadosamente el contexto del proyecto y los desarrolladores antes de elegir estas métricas.

La tercera, la experiencia del desarrollador, en cambio, se basa mucho más en métricas subjetivas que pueden ser más difíciles de medir, pero hoy propongo que es fundamental que entendamos y mejoremos la experiencia del desarrollador, porque sabemos por investigaciones anteriores que la mejora de la experiencia del desarrollador conducirá a mejoras en la calidad del producto y la velocidad del proceso y viceversa.
Pero a qué me refiero cuando digo experiencia del desarrollador, se preguntarán.
También es complicado.

A partir de un estudio que realicé recientemente con mis colegas Michaela y Abi, definimos la experiencia del desarrollador como la forma en que los desarrolladores piensan, sienten y valoran su trabajo.
Y en este estudio realizamos entrevistas en profundidad con 21 desarrolladores de toda la industria para entender qué factores tienen el mayor impacto en su experiencia.
Y descubrimos seis factores clave, seis categorías de factores clave: el flujo y la satisfacción de los desarrolladores, cómo colaboran con los demás y su cultura en el trabajo, cómo se gestiona su equipo y su producto, y la calidad de las herramientas y los procesos de ingeniería que utilizan.
Pero también descubrimos que el impacto que tienen estos diferentes factores depende realmente de su contexto específico del proyecto y de su trabajo.
Y estos factores pueden ayudarnos a elegir objetivos específicos y, a su vez, métricas que pueden mejorar la experiencia de los desarrolladores y, a su vez, la productividad general de los mismos.

Para terminar, estas son mis principales conclusiones.
La productividad es más complicada de lo que creemos.
Significa cosas diferentes para cada persona y no existe una métrica de productividad universal o incluso un conjunto universal de métricas.
SPACE puede ayudarnos a seleccionar algunas métricas, pero primero tenemos que articular claramente nuestros objetivos antes de seleccionar cualquiera.
Y, por último, sugiero que, como industria, debemos centrarnos mucho más en entender y mejorar la experiencia de los desarrolladores, ya que esto conducirá a mejoras en la calidad del producto y la velocidad de la ingeniería, todos ellos objetivos importantes dentro del espacio de la productividad.
Así que gracias y espero que algunos de ustedes se pongan en contacto conmigo por correo electrónico o Twitter si tienen preguntas o pensamientos para compartir y me encantaría escucharlos.

