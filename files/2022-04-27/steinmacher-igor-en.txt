so uh once again it's a pleasure to be here greg uh thank you for uh inviting me uh it's a great opportunity to be uh in this event so uh today i will talk about uh a support that i conducted with some colleagues from uh federal university of amazon and uh it's about bedding and negotiation and software estimates so uh as well as well known uh in software engineering stakeholders take the effort needed to execute a desk as well uh a project or to to uh predict uh the value that can be delivered to the customer so they can have the outcome that they are expecting the estimators they bring this perspective about the factors that would affect somehow uh the estimates looking for improving the accuracy when they are discussing uh how much effort and how much time they will need to put they will need to take uh to develop what they uh what they need for the next release uh it's important to understand here that this estimation process it happens in social settings and uh as everything that i do it involves something related to behavior and social aspects uh inside of software engineering process so uh why is this social because it involves not only people working on that but also the context where they are uh uh they are immersing uh so the literature about uh uh esthetics is extense so we can find things from the 70s until like papers from last week talking about software estimates and what we found when lurking into the literature is that there is a broad range of uh factors affecting estimations uh from in fact uh from early estimation so at the beginning of the project they have early estimation estimates coming in and this is taking into account when they are defining the estimates for the next release or the next print whatever you you you call it uh until uh things related to changes in requirements change in scope uh the project flexibility etc and this goes through a lot of a lot of stuff that happens in the project like when when you're estimating you're executing performing this this means this mission process and in this point we have a bunch of social things happening contextual things happening which includes for example pressure from high management from clients from the po it includes the uh team itself how is the relationship between the teams expertise seniority where these people are coming from so there are multiple kinds of factors affecting the way that people uh estimate suffer to better understand uh uh this phenomenon in a more recent uh fashion we conducted some observation studies and a couple of interviews a few interviews with people from different countries different companies different teams uh we took like three months observing uh four different teams during their estimate sessions and our goal was to understand how software estimates were used to establish common commitments uh regarding the business values so we just wanted to understand like what's what what's time these two things the estimates and what is being delivered what has been what what the team is being committed to do and ended up that uh we found out that estimates negotiation and betting were key things happening in the process so it was quite impressive the number of things that we could tie to negotiation and bedding during this process so what we see is that what he saw is that the teams that we analyze it and the people that we talked to after because we talked to uh many more people from three different companies later on is that all of them follow some kind of agile practices uh like planning poker based estimates uh where people come with estimates from the team so they discuss the task and each of the members comes up with an estimation and uh they discuss to to come to a consensus okay and each of the teams has a different kind of resolution strategy when you have like these agreements in terms of uh estimates uh but at the end of the day what what we understood is that the bo and team lead just want to know the arguments that they need to have to discuss if with the the next layer with higher management or the client so they are seeking to understand how they can build commitment bringing the arguments that the developers are bringing are bringing them and interestingly some people do not even argue some people depending on what are the other people that are uh estimating and what the po has to say they don't even disagree they just gonna say okay i can change my uh my estimates if this is better so sometimes what we saw is that there is a a kind of power relationship going on it's like okay we need to deliver this by next week so if we don't if we don't change the estimates we'll not be able to do or sometimes there's a very senior person who's like okay this is quite hard and i know that it's hard and some some other people who are more junior they will just accept so without arguing against or in favor of something so uh the way that estimators defend is quite important because uh this is what is giving the the ammo for the next layers and we saw that at the end of the estimation process we talked it to the bos and other layers to understand like what was going on and we saw that there was kind of a mismatch and each layer have their own goals uh with what was going on in the estimation process so one thing that we noticed that they played by the book when we were talking about project management as you know that risk management is something important and in order to better manage the risk it's common to bet a little bit so we have a contingency buffer sometimes like as you can see here in the examples when we cannot define the feature very well when there are some hidden aspects that we don't know about it's a different api that we need to consume all right we don't know which what kinds of problems we have to face in this release so this is a common and this is completely understandable however what called our attention is that we are doing more than that for every everything that we talked to and observed we could see that we are doing different different things that result in betting and quite often uh and what we are doing is actually hiding the tails from the next level so for example uh we found a couple cases where people just said like okay we could not finish what we promised in the previous release in the previous screen so we'll just add some more time here to this task so we are able to finish something else or we need to adjust whatever whatever it is in the uh ui from the previous feature that they delivered so let's just add something here so we can do that now we need to set up a new server so why not adding some time to these this and these tasks and also things relate to related to technical debt for example or improving the overall quality maintainability of the process so it was quite usual to hear like okay let's do this because we need to refactor a couple of artifacts so let's just add some time here add some effort there

what what what is uh behind that like everybody is hiding from the next level just because they need to deliver something that is not a direct kind of benefit or business value that can be easily shown to the customer so what i've learned here is that adding is used in the right way in many many cases but it's sometimes used as a social way of hiding things so people just lie informally to make things fit because they know that there are other things that they can do and uh everybody who is listening here who is watching to this talk should be like okay we do that it's common yeah it's come but it's kind of a bad smell if we think about the process of the software process uh and accuracy is in harm when you think about that because we don't know exactly what we are doing and we don't know exactly how our team perform what do we need to do we need to sell everything as business value and this needs to come from the bottom so we need to expose the reasons as estimators as developers say like what are we doing are we refactoring are we improving maintainability what are we doing and in the next level like po level team leader level we need to describe these reasons that developers gave us as somehow customer value so in the next release this will be something better we will improve our performance the the product will have a a a better performance and for the next the last level management when we're in touch with the client we need to educate them that there are some things that are not exactly new features that are not exactly direct benefits to the product as they see but it's something related to the process that will make it better from that moment on i hope you liked that and thank you very much again greg and mike for inviting me

you